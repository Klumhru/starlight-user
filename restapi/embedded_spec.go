package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A user resource with identity Information",
    "title": "User",
    "version": "1.0.0"
  },
  "host": "starlight-user",
  "basePath": "/user",
  "paths": {
    "/": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "listUsers",
        "parameters": [
          {
            "maxLength": 12,
            "minLength": 12,
            "type": "string",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "createUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "202": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "tags": [
          "userhealthz"
        ],
        "operationId": "getHealthz",
        "responses": {
          "200": {
            "description": "Get service healthz",
            "schema": {
              "$ref": "#/definitions/healthz"
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "responses": {
          "200": {
            "description": "Get",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "operationId": "deleteUser",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "maxLength": 12,
          "minLength": 12,
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "healthz": {
      "type": "object",
      "properties": {
        "mongoOk": {
          "type": "boolean",
          "default": false
        },
        "version": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "maxLength": 12,
          "minLength": 12,
          "readOnly": true
        },
        "identity": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "familyName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "link": {
              "type": "string"
            },
            "locale": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "pictureUrl": {
              "type": "string"
            },
            "provider": {
              "type": "string",
              "minLength": 1
            },
            "providerId": {
              "type": "string",
              "minLength": 1
            },
            "verifiedEmail": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    }
  }
}`))
}
